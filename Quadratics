//Dev Patel
//2/15/2019
//this program, you will be using an old Algebra I rule to determine the number of real roots that a quadratic equation has.
#include <iostream>
#include <math.h>

using namespace std;
float discriminant(float &a, float &b, float &c, float &d);
void getValues( float &a, float &b, float &c);
float numRoots(float &d);

int main()
{
int num = 1;
   do
    {
    float  a , b , c ,d , root;

    getValues(a,b,c);
    d = discriminant(a,b,c,d);
    root = numRoots(d);

    cout<<"The discriminant is " <<d<<endl;
    cout<<"The solution has "<<root <<" real root"<<endl;
    }

    while (num = 1 );

    return 0;
}

void getValues(float & a , float & b , float & c )
{

    cout<<"Enter the value of A: ";
    cin>>a;
    cout<<"Enter the value of B: ";
    cin>>b;
    cout<<"Enter the value of C: ";
    cin>>c;
}

float discriminant(float & a , float & b , float & c,float & d)
{

    d = ((pow(b,2) - (4*a*c)));
    return d;
}

float numRoots(float & d)
{
    int root;
    if ( d > 0)
    root = 2;
    else if ( d == 0 )
    root = 1;
    else if(d < 0)
    root = 0;

    return root;

}

